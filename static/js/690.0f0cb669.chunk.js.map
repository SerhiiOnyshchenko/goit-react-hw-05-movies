{"version":3,"file":"static/js/690.0f0cb669.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesGallery/MoviesGallery.module.css?276e","components/MoviesGallery/MoviesGallery.js","webpack://goit-react-hw-05-movies/./src/components/Scrollup/Scrollup.module.css?781e","components/Scrollup/Scrollup.js","webpack://goit-react-hw-05-movies/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.js","pages/MoviesPage/MoviesPage.js","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieGrid\":\"MoviesGallery_MovieGrid__j7Vkq\",\"Item\":\"MoviesGallery_Item__M1y35\",\"Link\":\"MoviesGallery_Link__-IlD5\",\"Img\":\"MoviesGallery_Img__k6Gw6\",\"title\":\"MoviesGallery_title__uAO6V\"};","import React from 'react';\nimport { URL_IMG } from '../../services/movies-api';\nimport { Link } from 'react-router-dom';\nimport s from './MoviesGallery.module.css';\nimport defaultImg from '../../images/default-movie.png';\nimport PropTypes from 'prop-types';\n\nexport default function MoviesGallery({ moviesList }) {\n   return (\n      <ul id=\"MoviesGallery\" className={s.MovieGrid}>\n         {moviesList.map(({ id, title, name, poster_path }) => (\n            <li key={id} className={s.Item}>\n               <Link to={`/movies/${id}`} className={s.Link}>\n                  <img\n                     className={s.Img}\n                     src={poster_path ? URL_IMG + poster_path : defaultImg}\n                     alt={title || name}\n                  />\n                  <p className={s.title}>{title || name}</p>\n               </Link>\n            </li>\n         ))}\n      </ul>\n   );\n}\n\nMoviesGallery.propTypes = {\n   moviesList: PropTypes.arrayOf(\n      PropTypes.shape({\n         id: PropTypes.number.isRequired,\n         title: PropTypes.string,\n         name: PropTypes.string,\n         poster_path: PropTypes.string,\n      })\n   ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Scrollup\":\"Scrollup_Scrollup__f4kL-\"};","import s from './Scrollup.module.css';\n\nexport default function Scrollup() {\n   //Get the button:\n   const mybutton = document.getElementById('myBtn');\n\n   // When the user scrolls down 20px from the top of the document, show the button\n   window.onscroll = () => scrollFunction();\n\n   function scrollFunction() {\n      if (\n         document.body.scrollTop > 40 ||\n         document.documentElement.scrollTop > 40\n      ) {\n         mybutton.style.display = 'block';\n      } else {\n         mybutton.style.display = 'none';\n      }\n   }\n\n   // When the user clicks on the button, scroll to the top of the document\n   const onUp = () => {\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n   };\n\n   return (\n      <button\n         id=\"myBtn\"\n         type=\"button\"\n         className={s.Scrollup}\n         onClick={onUp}\n      ></button>\n   );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"Searchbar_Searchbar__5WKzV\",\"SearchForm\":\"Searchbar_SearchForm__XuPyK\",\"SearchFormInput\":\"Searchbar_SearchFormInput__FT6Bx\"};","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Searchbar.module.css';\nimport { useLocation } from 'react-router-dom';\n\nexport default function Searchbar({ onSubmit }) {\n   const { state } = useLocation();\n   const [value, setValue] = useState(\n      window.location.search.split('=')[1] || ''\n   );\n\n   useEffect(() => {\n      if (state) {\n         setValue(state);\n         return;\n      }\n      setValue('');\n   }, [state]);\n\n   const onFormSubmit = e => {\n      e.preventDefault();\n      onSubmit(value);\n   };\n\n   return (\n      <div className={s.Searchbar}>\n         <form className={s.SearchForm} onSubmit={onFormSubmit}>\n            <input\n               className={s.SearchFormInput}\n               type=\"text\"\n               autoComplete=\"off\"\n               autoFocus={true}\n               value={value}\n               onChange={e => setValue(e.target.value)}\n               placeholder=\"Search movies\"\n            />\n         </form>\n      </div>\n   );\n}\n\nSearchbar.propTypes = {\n   onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { fetchSearchMovie } from '../../services/movies-api';\nimport Loader from '../../components/Loader/Loader';\nimport Button from '../../components/Button/Button';\nimport Scrollup from '../../components/Scrollup/Scrollup';\nimport MoviesGallery from '../../components/MoviesGallery/MoviesGallery';\nimport Searchbar from '../../components/Searchbar/Searchbar';\nimport * as Scroll from 'react-scroll';\nimport Notiflix from 'notiflix';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nNotiflix.Notify.init({\n   position: 'left-top',\n});\n\nexport default function MoviesPage() {\n   const history = useNavigate();\n   const location = useLocation();\n   const [searchName, setSearchName] = useState(location.state ?? '');\n   const [countPage, setCountPage] = useState(1);\n   const [moviesList, setMoviesList] = useState([]);\n   const [showLoadMore, setShowLoadMore] = useState(false);\n   const [loading, setLoading] = useState(false);\n\n   useEffect(() => {\n      if (!location.state) {\n         setShowLoadMore(false);\n      }\n      setSearchName(location.state);\n      setCountPage(1);\n      setMoviesList([]);\n   }, [location.state]);\n\n   useEffect(() => {\n      if (!searchName) {\n         return;\n      }\n      setShowLoadMore(false);\n      setLoading(true);\n      fetchSearchMovie(searchName, countPage)\n         .then(date => {\n            setMoviesList(prev => {\n               const filterRes = date.results.filter(({ id }) => {\n                  for (const movie of prev) {\n                     if (id === movie.id) {\n                        return false;\n                     }\n                  }\n                  return true;\n               });\n               return [...prev, ...filterRes];\n            });\n            setLoading(false);\n            if (date.total_results !== date.results.length) {\n               setShowLoadMore(true);\n            }\n            if (countPage === 1) {\n               Notiflix.Notify.success(\n                  `Hooray! We found ${date.total_results} movies.`\n               );\n            }\n            if (date.total_results <= countPage * 20) {\n               setShowLoadMore(false);\n               Notiflix.Notify.info(\n                  \"We're sorry, but you've reached the end of search results.\"\n               );\n            }\n         })\n         .catch(onApiError);\n   }, [countPage, searchName]);\n\n   const onApiError = () => {\n      Notiflix.Notify.failure(\n         'Sorry, there are no movies matching your search query. Please try again.'\n      );\n      setShowLoadMore(false);\n      setLoading(false);\n   };\n\n   const onSubmit = name => {\n      if (!name) {\n         Notiflix.Notify.failure('Please. Enter the name of the movie.');\n         setShowLoadMore(false);\n      }\n      if (searchName === name && countPage === 1) {\n         return;\n      }\n      history({ ...location, search: `query=${name}` }, { state: name });\n      setSearchName(name);\n      setCountPage(1);\n      setMoviesList([]);\n   };\n\n   const onloadeMore = () => {\n      setCountPage(prev => prev + 1);\n      scrollSlowly();\n   };\n\n   const scrollSlowly = () => {\n      const { height: cardHeight } = document\n         .querySelector('#MoviesGallery')\n         .firstElementChild.getBoundingClientRect();\n      Scroll.animateScroll.scrollMore(cardHeight * 2);\n   };\n   return (\n      <div>\n         <Searchbar onSubmit={onSubmit} />\n         <MoviesGallery moviesList={moviesList} />\n         {loading && <Loader />}\n         {showLoadMore && <Button onClick={onloadeMore} title=\"Load more\" />}\n         <Scrollup />\n      </div>\n   );\n}\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst MY_KEY = '2638d702e8992f774e165b094b88cb75';\n\nexport const URL_IMG = 'https://image.tmdb.org/t/p/w500';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n   const response = await fetch(url, config);\n   return response.ok\n      ? await response.json()\n      : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending(page) {\n   return fetchWithErrorHandling(\n      `${BASE_URL}/trending/movie/day?api_key=${MY_KEY}&page=${page}`\n   );\n}\n\nexport function fetchSearchMovie(query, page = 1) {\n   return fetchWithErrorHandling(\n      `${BASE_URL}/search/movie?api_key=${MY_KEY}&language=en-US&query=${query}&include_adult=false&page=${page}`\n   );\n}\n\nexport function fetchMovieDetailsById(id) {\n   return fetchWithErrorHandling(`${BASE_URL}/movie/${id}?api_key=${MY_KEY}`);\n}\n\nexport function fetchMovieCreditsById(id) {\n   return fetchWithErrorHandling(\n      `${BASE_URL}/movie/${id}/credits?api_key=${MY_KEY}&language=en-US`\n   );\n}\n\nexport function fetchMovieReviewsById(id) {\n   return fetchWithErrorHandling(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${MY_KEY}&language=en-US`\n   );\n}\n"],"names":["MoviesGallery","moviesList","id","className","s","map","title","name","poster_path","to","src","URL_IMG","defaultImg","alt","Scrollup","mybutton","document","getElementById","window","onscroll","body","scrollTop","documentElement","style","display","type","onClick","scrollTo","top","behavior","Searchbar","onSubmit","state","useLocation","useState","location","search","split","value","setValue","useEffect","e","preventDefault","autoComplete","autoFocus","onChange","target","placeholder","MoviesPage","history","useNavigate","searchName","setSearchName","countPage","setCountPage","setMoviesList","showLoadMore","setShowLoadMore","loading","setLoading","fetchSearchMovie","then","date","prev","filterRes","results","filter","total_results","length","Notiflix","catch","onApiError","scrollSlowly","cardHeight","querySelector","firstElementChild","getBoundingClientRect","height","Scroll","Loader","Button","position","BASE_URL","MY_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","page","query","fetchMovieDetailsById","fetchMovieCreditsById","fetchMovieReviewsById"],"sourceRoot":""}