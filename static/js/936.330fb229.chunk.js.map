{"version":3,"file":"static/js/936.330fb229.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesGallery/MoviesGallery.module.css?276e","components/MoviesGallery/MoviesGallery.js","webpack://goit-react-hw-05-movies/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.js","components/MoviesPage/MoviesPage.js","webpack://goit-react-hw-05-movies/./src/components/Scrollup/Scrollup.module.css?781e","components/Scrollup/Scrollup.js","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieGrid\":\"MoviesGallery_MovieGrid__j7Vkq\",\"Item\":\"MoviesGallery_Item__M1y35\",\"Link\":\"MoviesGallery_Link__-IlD5\",\"Img\":\"MoviesGallery_Img__k6Gw6\",\"title\":\"MoviesGallery_title__uAO6V\"};","import React from 'react';\nimport { URL_IMG } from '../../services/movies-api';\nimport { Link } from 'react-router-dom';\nimport s from './MoviesGallery.module.css';\nimport defaultImg from '../../images/default-movie.png';\nimport PropTypes from 'prop-types';\n\nexport default function MoviesGallery({ moviesList }) {\n   return (\n      <ul id=\"MoviesGallery\" className={s.MovieGrid}>\n         {moviesList.map(({ id, title, name, poster_path }) => (\n            <li key={id} className={s.Item}>\n               <Link to={`/movies/${id}`} className={s.Link}>\n                  <img\n                     className={s.Img}\n                     src={poster_path ? URL_IMG + poster_path : defaultImg}\n                     alt={title || name}\n                  />\n                  <p className={s.title}>{title || name}</p>\n               </Link>\n            </li>\n         ))}\n      </ul>\n   );\n}\n\nMoviesGallery.propTypes = {\n   moviesList: PropTypes.arrayOf(\n      PropTypes.shape({\n         id: PropTypes.number.isRequired,\n         title: PropTypes.string,\n         name: PropTypes.string,\n         poster_path: PropTypes.string,\n      })\n   ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"Searchbar_Searchbar__5WKzV\",\"SearchForm\":\"Searchbar_SearchForm__XuPyK\",\"SearchFormButton\":\"Searchbar_SearchFormButton__dksRa\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__7AAWA\",\"SearchFormInput\":\"Searchbar_SearchFormInput__FT6Bx\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n   const [value, setValue] = useState('');\n\n   const onFormSubmit = e => {\n      e.preventDefault();\n      onSubmit(value);\n      setValue('');\n   };\n\n   return (\n      <div className={s.Searchbar}>\n         <form className={s.SearchForm} onSubmit={onFormSubmit}>\n            <button type=\"submit\" className={s.SearchFormButton}></button>\n            <label className={s.SearchFormButtonLabel}></label>\n            <input\n               className={s.SearchFormInput}\n               type=\"text\"\n               autoComplete=\"off\"\n               autoFocus={true}\n               value={value}\n               onChange={e => setValue(e.target.value)}\n               placeholder=\"Search movies\"\n            />\n         </form>\n      </div>\n   );\n}\n\nSearchbar.propTypes = {\n   onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { fetchSearchMovie } from '../../services/movies-api';\nimport Searchbar from './../Searchbar/Searchbar';\nimport Loader from './../Loader/Loader';\nimport Button from './../Button/Button';\nimport Scrollup from './../Scrollup/Scrollup';\nimport MoviesGallery from './../MoviesGallery/MoviesGallery';\nimport * as Scroll from 'react-scroll';\nimport Notiflix from 'notiflix';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nNotiflix.Notify.init({\n   position: 'left-top',\n});\n\nexport default function MoviesPage() {\n   const history = useNavigate();\n   const location = useLocation();\n   const [searchName, setSearchName] = useState(location.state ?? '');\n   const [countPage, setCountPage] = useState(1);\n   const [moviesList, setMoviesList] = useState([]);\n   const [showLoadMore, setShowLoadMore] = useState(false);\n   const [loading, setLoading] = useState(false);\n\n   useEffect(() => {\n      if (!location.state) {\n         setShowLoadMore(false);\n      }\n      setSearchName(location.state);\n      setCountPage(1);\n      setMoviesList([]);\n   }, [location.state]);\n\n   useEffect(() => {\n      if (!searchName) {\n         return;\n      }\n      setShowLoadMore(false);\n      setLoading(true);\n      fetchSearchMovie(searchName, countPage)\n         .then(date => {\n            setMoviesList(prev => {\n               const filterRes = date.results.filter(({ id }) => {\n                  for (const movie of prev) {\n                     if (id === movie.id) {\n                        return false;\n                     }\n                  }\n                  return true;\n               });\n               return [...prev, ...filterRes];\n            });\n            setLoading(false);\n            if (date.total_results !== date.results.length) {\n               setShowLoadMore(true);\n            }\n            if (countPage === 1) {\n               Notiflix.Notify.success(\n                  `Hooray! We found ${date.total_results} movies.`\n               );\n            }\n            if (date.total_results <= countPage * 20) {\n               setShowLoadMore(false);\n               Notiflix.Notify.info(\n                  \"We're sorry, but you've reached the end of search results.\"\n               );\n            }\n         })\n         .catch(onApiError);\n   }, [countPage, searchName]);\n\n   const onApiError = () => {\n      Notiflix.Notify.failure(\n         'Sorry, there are no movies matching your search query. Please try again.'\n      );\n      setShowLoadMore(false);\n      setLoading(false);\n   };\n\n   const onSubmit = name => {\n      if (!name) {\n         Notiflix.Notify.failure('Please. Enter the name of the movie.');\n         setShowLoadMore(false);\n      }\n      if (searchName === name && countPage === 1) {\n         return;\n      }\n      history({ ...location, search: `query=${name}` }, { state: name });\n      setSearchName(name);\n      setCountPage(1);\n      setMoviesList([]);\n   };\n\n   const onloadeMore = () => {\n      setCountPage(prev => prev + 1);\n      scrollSlowly();\n   };\n\n   const scrollSlowly = () => {\n      const { height: cardHeight } = document\n         .querySelector('#MoviesGallery')\n         .firstElementChild.getBoundingClientRect();\n      Scroll.animateScroll.scrollMore(cardHeight * 2);\n   };\n   return (\n      <div>\n         <Searchbar onSubmit={onSubmit} />\n         <MoviesGallery moviesList={moviesList} />\n         {loading && <Loader />}\n         {showLoadMore && <Button onClick={onloadeMore} title=\"Load more\" />}\n         <Scrollup />\n      </div>\n   );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Scrollup\":\"Scrollup_Scrollup__f4kL-\"};","import s from './Scrollup.module.css';\n\nexport default function Scrollup() {\n   //Get the button:\n   const mybutton = document.getElementById('myBtn');\n\n   // When the user scrolls down 20px from the top of the document, show the button\n   window.onscroll = () => scrollFunction();\n\n   function scrollFunction() {\n      if (\n         document.body.scrollTop > 20 ||\n         document.documentElement.scrollTop > 20\n      ) {\n         mybutton.style.display = 'block';\n      } else {\n         mybutton.style.display = 'none';\n      }\n   }\n\n   // When the user clicks on the button, scroll to the top of the document\n   const onUp = () => {\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n   };\n\n   return (\n      <button\n         id=\"myBtn\"\n         type=\"button\"\n         className={s.Scrollup}\n         onClick={onUp}\n      ></button>\n   );\n}\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst MY_KEY = '2638d702e8992f774e165b094b88cb75';\n\nexport const URL_IMG = 'https://image.tmdb.org/t/p/w500';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n   const response = await fetch(url, config);\n   return response.ok\n      ? await response.json()\n      : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending(page = 1) {\n   return fetchWithErrorHandling(\n      `${BASE_URL}/trending/all/day?api_key=${MY_KEY}&page=${page}`\n   );\n}\n\nexport function fetchSearchMovie(query, page = 1) {\n   return fetchWithErrorHandling(\n      `${BASE_URL}/search/movie?api_key=${MY_KEY}&language=en-US&query=${query}&page=1&include_adult=false&page=${page}`\n   );\n}\n\nexport function fetchMovieDetailsById(id) {\n   return fetchWithErrorHandling(`${BASE_URL}/movie/${id}?api_key=${MY_KEY}`);\n}\n\nexport function fetchMovieCreditsById(id) {\n   return fetchWithErrorHandling(\n      `${BASE_URL}/movie/${id}/credits?api_key=${MY_KEY}&language=en-US`\n   );\n}\n\nexport function fetchMovieReviewsById(id) {\n   return fetchWithErrorHandling(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${MY_KEY}&language=en-US`\n   );\n}\n"],"names":["MoviesGallery","moviesList","id","className","s","map","title","name","poster_path","to","src","URL_IMG","defaultImg","alt","Searchbar","onSubmit","useState","value","setValue","e","preventDefault","type","autoComplete","autoFocus","onChange","target","placeholder","MoviesPage","history","useNavigate","location","useLocation","state","searchName","setSearchName","countPage","setCountPage","setMoviesList","showLoadMore","setShowLoadMore","loading","setLoading","useEffect","fetchSearchMovie","then","date","prev","filterRes","results","filter","total_results","length","Notiflix","catch","onApiError","scrollSlowly","cardHeight","document","querySelector","firstElementChild","getBoundingClientRect","height","Scroll","search","Loader","Button","onClick","Scrollup","position","mybutton","getElementById","window","onscroll","body","scrollTop","documentElement","style","display","scrollTo","top","behavior","BASE_URL","MY_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","page","query","fetchMovieDetailsById","fetchMovieCreditsById","fetchMovieReviewsById"],"sourceRoot":""}