{"version":3,"file":"static/js/581.0d1c73db.chunk.js","mappings":"mPACA,EAA6B,yBAA7B,EAA6D,mBAA7D,EAAsF,kBAAtF,EAAgH,oB,SCKjG,SAASA,IACrB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACPC,EAAAA,EAAAA,IAAsBN,GAASO,MAAK,SAAAC,GACjCJ,GAAW,OAAII,EAAKC,YAEvB,CAACT,KAGD,eAAIU,UAAWC,EAAf,SACIR,GACEA,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,QAA3B,OACT,gBAAuBN,UAAWC,EAAlC,WACG,gBACGD,UAAWC,EACXM,IAAKH,EAAeI,EAAAA,GAAUJ,EAAeK,EAC7CC,IAAKL,EACLM,MAAM,SAET,cAAGX,UAAWC,EAAd,SAAwBI,MAPlBF,EAAKG,U,+MCpBvBM,EAAW,+BACXC,EAAS,mCAEFL,EAAU,kCAAhB,SAEQM,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SAC0BC,MAAMF,EAAKC,GADrC,YACSE,EADT,QAEmBC,GAFnB,iCAGcD,EAASE,OAHvB,gDAIQC,QAAQC,OAAO,IAAIC,MAAM,cAJjC,2GAOO,SAASC,IAAyB,IAAXC,EAAU,uDAAH,EAClC,OAAOX,EAAuB,GAAD,OACvBF,EADuB,qCACcC,EADd,iBAC6BY,IAItD,SAASC,EAAiBC,GAAkB,IAAXF,EAAU,uDAAH,EAC5C,OAAOX,EAAuB,GAAD,OACvBF,EADuB,iCACUC,EADV,iCACyCc,EADzC,4CACkFF,IAI3G,SAASG,EAAsBzB,GACnC,OAAOW,EAAuB,GAAD,OAAIF,EAAJ,kBAAsBT,EAAtB,oBAAoCU,IAG7D,SAASjB,EAAsBO,GACnC,OAAOW,EAAuB,GAAD,OACvBF,EADuB,kBACLT,EADK,4BACiBU,EADjB,oBAKzB,SAASgB,EAAsB1B,GACnC,OAAOW,EAAuB,GAAD,OACvBF,EADuB,kBACLT,EADK,4BACiBU,EADjB,sB,kKC/BjB,SAASiB,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetailsPage/Cast/Cast.module.css?974b","pages/MovieDetailsPage/Cast/Cast.js","services/movies-api.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"authorGrid\":\"Cast_authorGrid__fdwd1\",\"Item\":\"Cast_Item__dG1eb\",\"Img\":\"Cast_Img__OuRlf\",\"title\":\"Cast_title__y0C3I\"};","import { useState, useEffect } from 'react';\nimport { URL_IMG, fetchMovieCreditsById } from '../../../services/movies-api';\nimport { useParams } from 'react-router-dom';\nimport defaultPhoto from '../../../images/avatar.png';\nimport s from './Cast.module.css';\n\nexport default function Cast() {\n   const { movieId } = useParams();\n   const [authors, setAuthors] = useState(null);\n\n   useEffect(() => {\n      fetchMovieCreditsById(movieId).then(date => {\n         setAuthors([...date.cast]);\n      });\n   }, [movieId]);\n\n   return (\n      <ul className={s.authorGrid}>\n         {authors &&\n            authors.map(({ id, profile_path, name, cast_id }) => (\n               <li key={id + cast_id} className={s.Item}>\n                  <img\n                     className={s.Img}\n                     src={profile_path ? URL_IMG + profile_path : defaultPhoto}\n                     alt={name}\n                     width=\"100\"\n                  />\n                  <p className={s.title}>{name}</p>\n               </li>\n            ))}\n      </ul>\n   );\n}\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst MY_KEY = '2638d702e8992f774e165b094b88cb75';\n\nexport const URL_IMG = 'https://image.tmdb.org/t/p/w500';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n   const response = await fetch(url, config);\n   return response.ok\n      ? await response.json()\n      : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending(page = 1) {\n   return fetchWithErrorHandling(\n      `${BASE_URL}/trending/all/day?api_key=${MY_KEY}&page=${page}`\n   );\n}\n\nexport function fetchSearchMovie(query, page = 1) {\n   return fetchWithErrorHandling(\n      `${BASE_URL}/search/movie?api_key=${MY_KEY}&language=en-US&query=${query}&page=1&include_adult=false&page=${page}`\n   );\n}\n\nexport function fetchMovieDetailsById(id) {\n   return fetchWithErrorHandling(`${BASE_URL}/movie/${id}?api_key=${MY_KEY}`);\n}\n\nexport function fetchMovieCreditsById(id) {\n   return fetchWithErrorHandling(\n      `${BASE_URL}/movie/${id}/credits?api_key=${MY_KEY}&language=en-US`\n   );\n}\n\nexport function fetchMovieReviewsById(id) {\n   return fetchWithErrorHandling(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${MY_KEY}&language=en-US`\n   );\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["Cast","movieId","useParams","useState","authors","setAuthors","useEffect","fetchMovieCreditsById","then","date","cast","className","s","map","id","profile_path","name","cast_id","src","URL_IMG","defaultPhoto","alt","width","BASE_URL","MY_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","page","fetchSearchMovie","query","fetchMovieDetailsById","fetchMovieReviewsById","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}