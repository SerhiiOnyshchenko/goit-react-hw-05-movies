{"version":3,"file":"static/js/541.f5bfbaf6.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesGallery/MoviesGallery.module.css?276e","components/MoviesGallery/MoviesGallery.js","webpack://goit-react-hw-05-movies/./src/components/Scrollup/Scrollup.module.css?781e","components/Scrollup/Scrollup.js","webpack://goit-react-hw-05-movies/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.js","services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieGrid\":\"MoviesGallery_MovieGrid__j7Vkq\",\"Item\":\"MoviesGallery_Item__M1y35\",\"Link\":\"MoviesGallery_Link__-IlD5\",\"Img\":\"MoviesGallery_Img__k6Gw6\",\"title\":\"MoviesGallery_title__uAO6V\"};","import React from 'react';\nimport { URL_IMG } from '../../services/movies-api';\nimport { Link } from 'react-router-dom';\nimport s from './MoviesGallery.module.css';\nimport defaultImg from '../../images/default-movie.png';\nimport PropTypes from 'prop-types';\n\nexport default function MoviesGallery({ moviesList }) {\n   return (\n      <ul id=\"MoviesGallery\" className={s.MovieGrid}>\n         {moviesList.map(({ id, title, name, poster_path }) => (\n            <li key={id} className={s.Item}>\n               <Link to={`/movies/${id}`} className={s.Link}>\n                  <img\n                     className={s.Img}\n                     src={poster_path ? URL_IMG + poster_path : defaultImg}\n                     alt={title || name}\n                  />\n                  <p className={s.title}>{title || name}</p>\n               </Link>\n            </li>\n         ))}\n      </ul>\n   );\n}\n\nMoviesGallery.propTypes = {\n   moviesList: PropTypes.arrayOf(\n      PropTypes.shape({\n         id: PropTypes.number.isRequired,\n         title: PropTypes.string,\n         name: PropTypes.string,\n         poster_path: PropTypes.string,\n      })\n   ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Scrollup\":\"Scrollup_Scrollup__f4kL-\"};","import s from './Scrollup.module.css';\n\nexport default function Scrollup() {\n   //Get the button:\n   const mybutton = document.getElementById('myBtn');\n\n   // When the user scrolls down 20px from the top of the document, show the button\n   window.onscroll = () => scrollFunction();\n\n   function scrollFunction() {\n      if (\n         document.body.scrollTop > 20 ||\n         document.documentElement.scrollTop > 20\n      ) {\n         mybutton.style.display = 'block';\n      } else {\n         mybutton.style.display = 'none';\n      }\n   }\n\n   // When the user clicks on the button, scroll to the top of the document\n   const onUp = () => {\n      window.scrollTo({ top: 0, behavior: 'smooth' });\n   };\n\n   return (\n      <button\n         id=\"myBtn\"\n         type=\"button\"\n         className={s.Scrollup}\n         onClick={onUp}\n      ></button>\n   );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"HomePage_title__UFLA3\"};","import { fetchTrending } from '../../services/movies-api';\nimport { useState, useEffect } from 'react';\nimport Loader from '../../components/Loader/Loader';\nimport Button from '../../components/Button/Button';\nimport Scrollup from '../../components/Scrollup/Scrollup';\nimport MoviesGallery from '../../components/MoviesGallery/MoviesGallery';\nimport * as Scroll from 'react-scroll';\nimport s from './HomePage.module.css';\n\nexport default function HomePage() {\n   const [moviesList, setMoviesList] = useState([]);\n   const [countPage, setCountPage] = useState(1);\n   const [showLoadMore, setShowLoadMore] = useState(true);\n   const [loading, setLoading] = useState(false);\n\n   useEffect(() => {\n      setShowLoadMore(false);\n      setLoading(true);\n      fetchTrending(countPage).then(date => {\n         setMoviesList(prev => {\n            const filterRes = date.results.filter(({ id }) => {\n               for (const movie of prev) {\n                  if (id === movie.id) {\n                     return false;\n                  }\n               }\n               return true;\n            });\n            return [...prev, ...filterRes];\n         });\n         setLoading(false);\n         setShowLoadMore(true);\n      });\n   }, [countPage]);\n\n   const onloadeMore = () => {\n      setCountPage(prev => prev + 1);\n      scrollSlowly();\n   };\n\n   const scrollSlowly = () => {\n      const { height: cardHeight } = document\n         .querySelector('#MoviesGallery')\n         .firstElementChild.getBoundingClientRect();\n      Scroll.animateScroll.scrollMore(cardHeight * 2);\n   };\n\n   return (\n      <div>\n         <h1 className={s.title}>Trending today</h1>\n         <MoviesGallery moviesList={moviesList} />\n         {loading && <Loader />}\n         {showLoadMore && <Button onClick={onloadeMore} title=\"Load more\" />}\n         <Scrollup />\n      </div>\n   );\n}\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst MY_KEY = '2638d702e8992f774e165b094b88cb75';\n\nexport const URL_IMG = 'https://image.tmdb.org/t/p/w500';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n   const response = await fetch(url, config);\n   return response.ok\n      ? await response.json()\n      : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending(page = 1) {\n   return fetchWithErrorHandling(\n      `${BASE_URL}/trending/all/day?api_key=${MY_KEY}&page=${page}`\n   );\n}\n\nexport function fetchSearchMovie(query, page = 1) {\n   return fetchWithErrorHandling(\n      `${BASE_URL}/search/movie?api_key=${MY_KEY}&language=en-US&query=${query}&page=1&include_adult=false&page=${page}`\n   );\n}\n\nexport function fetchMovieDetailsById(id) {\n   return fetchWithErrorHandling(`${BASE_URL}/movie/${id}?api_key=${MY_KEY}`);\n}\n\nexport function fetchMovieCreditsById(id) {\n   return fetchWithErrorHandling(\n      `${BASE_URL}/movie/${id}/credits?api_key=${MY_KEY}&language=en-US`\n   );\n}\n\nexport function fetchMovieReviewsById(id) {\n   return fetchWithErrorHandling(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${MY_KEY}&language=en-US`\n   );\n}\n"],"names":["MoviesGallery","moviesList","id","className","s","map","title","name","poster_path","to","src","URL_IMG","defaultImg","alt","Scrollup","mybutton","document","getElementById","window","onscroll","body","scrollTop","documentElement","style","display","type","onClick","scrollTo","top","behavior","HomePage","useState","setMoviesList","countPage","setCountPage","showLoadMore","setShowLoadMore","loading","setLoading","useEffect","fetchTrending","then","date","prev","filterRes","results","filter","scrollSlowly","cardHeight","querySelector","firstElementChild","getBoundingClientRect","height","Scroll","Loader","Button","BASE_URL","MY_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","page","fetchSearchMovie","query","fetchMovieDetailsById","fetchMovieCreditsById","fetchMovieReviewsById"],"sourceRoot":""}